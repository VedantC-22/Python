# **Deep Dive into Strings in Python**  
Python strings are an essential data type used in almost every Python program. Understanding them deeply is crucial for writing efficient and clean code.  

---

## **1. What is a String in Python?**  
A **string** is a sequence of characters enclosed in **single (`'`), double (`"`)**, or **triple (`'''` or """`)** quotes.

```python
s1 = 'Hello'      # Single quotes
s2 = "Python"     # Double quotes
s3 = '''Multiline
String'''         # Triple quotes (for multiline)
```

âœ… **Strings are immutable**, meaning they **cannot be changed after creation**.

---

## **2. String Indexing & Slicing**
### **a) Indexing** (Accessing individual characters)
Each character in a string has an index:

```
 H   e   l   l   o
 0   1   2   3   4   (Forward Index)
-5  -4  -3  -2  -1   (Reverse Index)
```

```python
s = "Hello"

print(s[0])   # H
print(s[-1])  # o
print(s[1])   # e
```

### **b) Slicing** (Extracting substrings)
```python
s = "Python"

print(s[0:4])   # Pyth (Characters from index 0 to 3)
print(s[:3])    # Pyt  (From start to index 2)
print(s[2:])    # thon (From index 2 to end)
print(s[::-1])  # nohtyP (Reversed string)
```

---

## **3. String Methods**
Python provides various **built-in methods** for string manipulation.

### **a) Case Conversion**
```python
s = "Hello World"
print(s.upper())    # HELLO WORLD
print(s.lower())    # hello world
print(s.title())    # Hello World
print(s.capitalize())  # Hello world
print(s.swapcase())  # hELLO wORLD
```

### **b) Removing Spaces**
```python
s = "  Hello Python  "
print(s.strip())    # "Hello Python" (removes spaces from both ends)
print(s.lstrip())   # "Hello Python  " (left strip)
print(s.rstrip())   # "  Hello Python" (right strip)
```

### **c) Finding and Replacing**
```python
s = "hello world"
print(s.find("world"))     # 6 (index where 'world' starts)
print(s.count("l"))        # 3 (count occurrences of 'l')
print(s.replace("world", "Python"))  # hello Python
```

### **d) Splitting and Joining**
```python
s = "apple,banana,cherry"
print(s.split(","))    # ['apple', 'banana', 'cherry']
print("-".join(["apple", "banana", "cherry"]))  # apple-banana-cherry
```

### **e) Checking Starts & Ends**
```python
s = "hello world"
print(s.startswith("hello"))  # True
print(s.endswith("world"))    # True
```

---

## **4. String Formatting**
## **a) f-strings (Python 3.6+)**
```python
name = "Alice"
age = 25
print(f"My name is {name} and I am {age} years old.")
```

## **b) Using `format()`**
```python
print("My name is {} and I am {} years old.".format(name, age))
```

## **c) Using `%` Operator (Old Method)**
```python
print("My name is %s and I am %d years old." % (name, age))
```

---

## **5. Escape Sequences**
| Escape Sequence| Description  | Example          | Output |
|----------------|--------------|------------------|--------|
| `\n`           | New line     | `"Hello\nWorld"` | Hello <br> World |
| `\t`           | Tab space    | `"Hello\tWorld"` | Hello   World |
| `\'`           | Single quote | `'It\'s a book'` | It's a book |
| `\"`           | Double quote | `"He said \"Hi\""` | He said "Hi" |
| `\\`           | Backslash    | `"C:\\Users\\"`  | C:\Users\ |

```python
print("Hello\nWorld")  # Newline
print("Hello\tWorld")  # Tab space
print("It\'s a book")  # Escape single quote
```

---

## **6. String Operations**
### **a) Concatenation & Repetition**
```python
a = "Hello"
b = "World"

print(a + " " + b)  # Output: "Hello World"
print(a * 3)  # Output: "HelloHelloHello"
```

### **b) Checking Substring**
```python
text = "Python is awesome"
print("Python" in text)     # True
print("Java" not in text)   # True
```

---

## **7. Advanced String Concepts**
### **a) Raw Strings (`r"string"`)**
Useful for regular expressions or file paths where backslashes are common.

```python
print(r"C:\Users\Name")  # Output: C:\Users\Name
```

### **b) Unicode & Encoding**
Python strings support **Unicode**, and you can encode/decode them.

```python
s = "Hello"
encoded = s.encode("utf-8")  # Convert to bytes
print(encoded)  # b'Hello'
print(encoded.decode("utf-8"))  # Convert back to string
```

### **c) String Interpolation (Old Method)**
```python
name = "Alice"
age = 25
print("My name is %s and I am %d years old." % (name, age))
```

---

# **ðŸ”´ Top Interview Questions on Strings in Python**
### **1. Reverse a String Without Using `[::-1]`**
```python
def reverse_string(s):
    return "".join(reversed(s))

print(reverse_string("hello"))  # "olleh"
```

### **2. Count the Number of Words in a String**
```python
def count_words(s):
    return len(s.split())

print(count_words("Python is awesome"))  # 3
```

### **3. Check if a String is a Palindrome**
```python
def is_palindrome(s):
    s = s.lower().replace(" ", "")
    return s == s[::-1]

print(is_palindrome("madam"))  # True
print(is_palindrome("hello"))  # False
```

### **4. Find the First Non-Repeating Character**
```python
from collections import Counter

def first_non_repeating(s):
    freq = Counter(s)
    for char in s:
        if freq[char] == 1:
            return char
    return None

print(first_non_repeating("aabccdeff"))  # 'b'
```

### **5. Find the Most Frequent Character in a String**
```python
def most_frequent_char(s):
    return max(set(s), key=s.count)

print(most_frequent_char("hello world"))  # 'l'
```

### **6. Remove Duplicates from a String**
```python
def remove_duplicates(s):
    return "".join(dict.fromkeys(s))

print(remove_duplicates("banana"))  # "ban"
```

### **7. Check if Two Strings are Anagrams**
```python
def is_anagram(s1, s2):
    return sorted(s1) == sorted(s2)

print(is_anagram("listen", "silent"))  # True
```

---

# **ðŸ“Œ Summary**
| Concept | Example |
|---------|---------|
| String Indexing | `"Python"[0] â†’ 'P'` |
| String Slicing | `"Python"[1:4] â†’ 'yth'` |
| String Methods | `"hello".upper() â†’ 'HELLO'` |
| String Formatting | `f"My name is {name}"` |
| Escape Sequences | `"Hello\nWorld"` |
| Concatenation | `"Hello" + "World"` |
| Checking Substring | `"Py" in "Python"` |
| Interview Questions | Reverse, Palindrome, Anagram, First Unique Character |

Would you like me to explain any part in more detail? ðŸš€